{"componentChunkName":"component---src-templates-blog-post-js","path":"/hello-world/","result":{"data":{"site":{"siteMetadata":{"title":"yougyung.github.io"}},"markdownRemark":{"id":"34007725-73a0-5275-b2ca-32619df50e72","excerpt":"졸업을 부탁해 \n간편 졸업요건검사 서비스 졸업을 부탁해는 졸업을 위해 반드시 필요한 수강과목과 졸업요건 정보가 파편화되어져 있고 자주 변경되어 학우들이 어려움을 겪는다는 문제점에서 시작된 프로젝트로, MyiWeb MSI…","html":"<blockquote>\n<p>졸업을 부탁해 <br/>\n간편 졸업요건검사 서비스<br/></p>\n</blockquote>\n<details>\n<summary>졸업을 부탁해 더 알아보기</summary>\n<blockquote>\n<p>졸업을 부탁해는 졸업을 위해 반드시 필요한 수강과목과 졸업요건 정보가 파편화되어져 있고 자주 변경되어 학우들이 어려움을 겪는다는 문제점에서 시작된 프로젝트로, MyiWeb MSI의 성적표만으로 졸업을 위해 필요한 미이수 과목 정보 및 잔여학점 조회, 카테고리별 수강학점현황, 강의 커스텀을 통한 졸업사정예측 서비스를 원클릭으로 제공합니다.\n<br/> <a href=\"https://github.com/Open-Eye-Im-Developer/MoGakGo-FE\">레포 이동하기</a> <br/> <a href=\"https://mju-graduate.com\">서비스 이동하기</a> <br/> <a href=\"https://github.com/Myongji-Graduate/myongji-graduate-next/pull/59/files\">PR 이동하기</a></p>\n</blockquote>\n</details>\n<br/>\n<br/>\n<h2>졸부의 커스텀 애니메이션</h2>\n<p><img src=\"https://github.com/user-attachments/assets/289b5960-b164-4181-904d-d18f70bd26ff\" alt=\"화면 기록 2024-07-28 오후 3 15 40\"></p>\n<p>졸업을 부탁해는 성적표를 입력하는 경우, 졸업요건의 충족을 위해 카테고리 별로 수강 정보 및 이수 현황을 제공하고 있습니다! <br/>\n그 과정에서 시각화도구로 chart를 이용하였으며, 이수 현황 비율에 맞춰 chart animation을 custom하여 제공하고 있습니다.</p>\n<h2>요구사항</h2>\n<ol>\n<li>percentage 변수에 맞춰 동적으로 chart게이지를 노출할 수 있어야한다.</li>\n<li>졸부팀이 사용하는 css framework(tailwind)로 구현해야한다.</li>\n</ol>\n<h2>구현</h2>\n<blockquote>\n<p>만일 저희 팀이 CSS-in-JS를 사용하는 경우였다면, props를 통해 percentage변수를 전달하여 동적 애니메이션을 노출했을 것으로 예상됩니다. <br/>\n하지만.. 우리팀은 tailwind를 쓰니까!!!</p>\n</blockquote>\n<ol>\n<li>percentage css 변수 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@property</span> --percentage</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">syntax</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&lt;number>\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">inherits</span><span class=\"token punctuation\">:</span> true<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">initial-value</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>css animation 구현</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> piechart</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.8<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--percentage</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.piechart::before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> piechart 1s forwards<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">inset</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">radial-gradient</span><span class=\"token punctuation\">(</span>farthest-side<span class=\"token punctuation\">,</span> #7590ff 98%<span class=\"token punctuation\">,</span> #0000<span class=\"token punctuation\">)</span> top/1.1rem 1.5rem\n      no-repeat<span class=\"token punctuation\">,</span> <span class=\"token function\">conic-gradient</span><span class=\"token punctuation\">(</span>#7590ff <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>—percentage<span class=\"token punctuation\">)</span> * 1%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> #0000 0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.piechart:after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> piechart 1s forwards<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 46%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">inset</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>50% - 0.74rem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #7590ff<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>—percentage<span class=\"token punctuation\">)</span> * 3.6deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>50% - 9rem / 2<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>piechart component에서 --percentage 변수에 동적으로 값을 할당 &#x26; class 추가</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">\n<span class=\"token string\">'use client'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PieChartProp</span> <span class=\"token punctuation\">{</span>\n  percentage<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">PieChart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> percentage <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PieChartProp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filterdPercentage <span class=\"token operator\">=</span> percentage <span class=\"token operator\">></span> <span class=\"token number\">100</span> <span class=\"token operator\">?</span> <span class=\"token number\">100</span> <span class=\"token operator\">:</span> percentage<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div\n      className<span class=\"token operator\">=</span> <span class=\"token string\">'piechart ...'</span>\n      style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'--percentage'</span><span class=\"token operator\">:</span> percentage\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>filterdPercentage<span class=\"token punctuation\">}</span><span class=\"token operator\">%</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PieChart<span class=\"token punctuation\">;</span>\n\n</code></pre></div>\n<ol start=\"4\">\n<li>--percectage 커스텀 변수를 할당하면 build시에\n<code class=\"language-text\">Object literal may only specify known properties, and ''--percentage'' does not exist in type 'Properties&lt;string | number, string &amp; {}>'.</code>\n해당 타입오류가 발생할겁니당 <br/>\nTypeScript에서 예상하는 속성타입에는 없는 <code class=\"language-text\">--percentage</code> 속성이 존재하기때문에 발생하는 이슈로\n이를 해결하기 위해 react가 권장하는 <a href=\"https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors\">모듈 확장</a>을 통해 확장을 진행했습니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">//css.d.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">CSS</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"csstype\"</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">\"csstype\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Properties</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Add CSS Custom Properties</span>\n    <span class=\"token string\">\"--percentage\"</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>경험한 문제</h2>\n<h3>커스텀 애니메이션이 적용되지않아 (.இ﹏இ`｡)</h3>\n<p>pie-chart의 애니메이션은 커스텀 변수(--percentage)가 0부터 할당해준 값까지 상승하며 차트가 그려지는 구조입니다.<br/>\n하지만 0%와 100%의 경우에만 애니메이션으로 변화가 적용되는 문제!!를 경험했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">//tailwind.config.ts</span>\ntheme <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extend <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n       animation <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            piechart <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string-property property\">'0%'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>  <span class=\"token string-property property\">'--percentage'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'0'</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n       <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>위 코드는 처음 애니메이션을 적용한 코드입니다.<br/> 졸부팀은 tailwind를 사용하기때문에 tailwind.config.ts에\n커스텀 변수가 애니메이션을 적용시켰습니다. <br/> --percentage는 number type으로 0을 할당해줘야하는데, tailwind.config.ts에는 string type으로만 type지정이 가능하므로 커스텀 변수의 값을 ‘0’으로 지정한 것이 원인이었습니다. <br/>\n해당 문제를 확인하고, 위의 코드와 같이 piechart에 사용되는 css는 별도로 분리해서 pie-chart.css file을 통해 관리하고 있습니다!!</p>","frontmatter":{"date":"2024.07.28","title":"tailwind theme 동적 할당을 통한 커스텀 애니메이션 구현하기","description":"tailwind theme 동적 할당을 통한 커스텀 애니메이션 구현하기","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#083898","images":{"fallback":{"src":"/static/8a20bfeb862ed8b94f539e30f008ea31/948fb/custom_css.png","srcSet":"/static/8a20bfeb862ed8b94f539e30f008ea31/21474/custom_css.png 200w,\n/static/8a20bfeb862ed8b94f539e30f008ea31/4c798/custom_css.png 400w,\n/static/8a20bfeb862ed8b94f539e30f008ea31/948fb/custom_css.png 800w,\n/static/8a20bfeb862ed8b94f539e30f008ea31/ab05e/custom_css.png 1600w","sizes":"(min-width: 800px) 800px, 100vw"},"sources":[{"srcSet":"/static/8a20bfeb862ed8b94f539e30f008ea31/7ad72/custom_css.webp 200w,\n/static/8a20bfeb862ed8b94f539e30f008ea31/2f986/custom_css.webp 400w,\n/static/8a20bfeb862ed8b94f539e30f008ea31/29a5b/custom_css.webp 800w,\n/static/8a20bfeb862ed8b94f539e30f008ea31/99c6d/custom_css.webp 1600w","type":"image/webp","sizes":"(min-width: 800px) 800px, 100vw"}]},"width":800,"height":448}}}}},"previous":{"fields":{"slug":"/PWA & FCM 알람 구현 | 웹서비스 모각GO가 실시간 알람을 구현하기 위한 과정/"},"frontmatter":{"title":"PWA & FCM 알람 구현 | 웹서비스 모각GO가 실시간 알람을 구현하기 위한 과정"}},"next":{"fields":{"slug":"/3/"},"frontmatter":{"title":"FE 렌더링 흐름 이해하기 그리고 내가 프로젝트를 할 때 rendering방식을 결정하는 기준"}}},"pageContext":{"id":"34007725-73a0-5275-b2ca-32619df50e72","previousPostId":"13519e42-00d3-5208-816a-ae0df3764ae6","nextPostId":"03226e8a-89a0-55a5-b66e-a0e49d17f0a7"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}