{"version":3,"file":"component---src-pages-using-typescript-tsx-a71431c639a50d9b6e64.js","mappings":"oNAaA,MA+BaA,EAA0B,KACrCC,EAAAA,EAAAA,IAACC,EAAAA,EAAG,CAACC,MAAM,mBAAmBC,iBAAaC,EAAWC,cAAUD,IAGlE,UAnCwDE,IAAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACD,SACCT,EAAAA,EAAAA,IAACU,EAAAA,EAAM,CAACR,MAAM,mBAAmBO,SAAUA,IACzCT,EAAAA,EAAAA,IAAAA,KAAAA,KAAI,2CACJA,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,6CACwC,oBAAM,YAAe,2CAClC,oBAAM,YAAe,sCACzC,oBAAM,oBAAuB,OAEvCA,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,6CACwC,kBAAI,cAAe,qBACxD,kBAAI,cAAe,iBAAa,kBAAI,YAAa,WAEvDA,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,kCAC8BQ,EAAK,uBAAqB,IACxDD,EAAKI,KAAKC,UAAU,MAEvBZ,EAAAA,EAAAA,IAAAA,IAAAA,KAAG,kCAC+B,KAChCA,EAAAA,EAAAA,IAAAA,IAAAA,CAAGa,KAAK,yEAAwE,kCAE5E,MAGNb,EAAAA,EAAAA,IAACc,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,wDCsBX,IA1De,IAAoC,IAAnC,SAAEN,EAAQ,MAAEP,EAAK,SAAEG,GAAU,EAC3C,MACMW,EAD6B,MAChBP,EAASQ,SAC5B,IAAIC,EAEJ,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,MAwC/C,OAtCAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAe,KACnBH,EAAeI,OAAOC,WAAW,EAQnC,MALsB,oBAAXD,SACTD,IACAC,OAAOE,iBAAiB,SAAUH,IAG7B,KACLC,OAAOG,oBAAoB,SAAUJ,EAAa,CACnD,GACA,IAGDL,EADEF,GAEA,yBACE,cAAIY,UAAU,gBAAgB1B,IAC9B,oBACE,QAAC,EAAAY,KAAI,CAACC,GAAG,IAAIc,MAAO,CAAEC,MAAO,yBAA0B,SAGvD,QAAC,EAAAhB,KAAI,CAACC,GAAG,UACN,IACgB,OAAhBI,EAAuBA,EAAc,iBAO5C,QAAC,EAAAL,KAAI,CAACc,UAAU,mBAAmBb,GAAG,KACnCb,IAML,eAAK0B,UAAU,iBAAiB,oBAAmBZ,IACjD,kBAAQY,UAAU,iBAAiBV,IACnC,gBAAMU,UAAU,eAAevB,IAC/B,kBAAQuB,UAAU,iBAAgB,8CACU,mBAAM,sBAC9B,aAAGf,KAAK,4BAA2B,UAAU,oBAClD,aAAGA,KAAK,+BAA8B,aAEjD,C,wDCVV,IAvCY,IAAuC,IAAD,UAArC,YAAEV,EAAW,MAAED,EAAK,SAAEG,GAAU,EAC3C,MAAM,KAAEM,IAASoB,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkB7B,GAAeQ,EAAKsB,aAAa9B,YACnD+B,EAAgC,QAApB,EAAGvB,EAAKsB,oBAAY,aAAjB,EAAmB/B,MAExC,OACE,yBACE,qBAAQgC,EAAkBhC,EAAK,MAAMgC,EAAiBhC,IACtD,gBAAMiC,KAAK,cAAcC,QAASJ,KAClC,gBAAMK,SAAS,WAAWD,QAASlC,KACnC,gBAAMmC,SAAS,iBAAiBD,QAASJ,KACzC,gBAAMK,SAAS,UAAUD,QAAQ,aACjC,gBAAMD,KAAK,eAAeC,QAAQ,aAClC,gBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAzB,EAAKsB,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,MAE7C,gBAAMJ,KAAK,gBAAgBC,QAASlC,KACpC,gBAAMiC,KAAK,sBAAsBC,QAASJ,IACzC3B,EACA,C","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => (\n  <Seo title=\"Using TypeScript\" description={undefined} children={undefined} />\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"../style/style.scss\"\nimport { useState, useEffect } from \"react\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  const [windowWidth, setWindowWidth] = useState(null)\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth)\n    }\n\n    if (typeof window !== \"undefined\") {\n      handleResize() // 초기 설정\n      window.addEventListener(\"resize\", handleResize)\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize)\n    }\n  }, [])\n\n  if (isRootPath) {\n    header = (\n      <>\n        <h1 className=\"main-heading\">{title}</h1>\n        <div>\n          <Link to=\"/\" style={{ color: \"var(--color-primary)\" }}>\n            Tech\n          </Link>\n          <Link to=\"/about\">\n            {\" \"}\n            {windowWidth !== null ? windowWidth : \"Loading...\"}\n          </Link>\n        </div>\n      </>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main className=\"global-main\">{children}</main>\n      <footer className=\"global-footer\">\n        Copyright © yougyung All rights reserved. <br />\n        2024 | built with <a href=\"https://www.gatsbyjs.com\">Gatsby</a> |\n        Developed by <a href=\"https://github.com/yougyung\">yougyung</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","___EmotionJSX","Seo","title","description","undefined","children","_ref","data","path","location","Layout","site","buildTime","href","Link","to","isRootPath","pathname","header","windowWidth","setWindowWidth","useState","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","style","color","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}