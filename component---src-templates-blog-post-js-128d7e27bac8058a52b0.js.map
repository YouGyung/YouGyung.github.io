{"version":3,"file":"component---src-templates-blog-post-js-128d7e27bac8058a52b0.js","mappings":"mQAmBA,MAhBA,WAQE,OACEA,EAAAA,EAAAA,IAACC,EAAS,CAACC,QARW,KACtB,IAAIC,EAASC,OAAOC,SAASC,KAC7BC,UAAUC,UAAUC,UAAUN,GAAQO,MAAKC,IACzCC,MAAM,SAAS,GACf,IAKAZ,EAAAA,EAAAA,IAACa,EAAAA,EAAW,CAACC,IAAI,wBAAwBC,IAAK,kBAAkB,uBAChEf,EAAAA,EAAAA,IAAAA,OAAAA,KAAM,cAGZ,EAMO,MAAMC,GAAS,ogBCUtB,MA5BA,SAAc,GAAgB,IAAhB,KAAEe,GAAW,EACzB,MAAM,MAAEC,EAAK,KAAEC,EAAI,MAAEC,GAAUH,EAAKI,YAEpC,OACEpB,EAAAA,EAAAA,IAACqB,EAAS,CAACC,WAAS,EAACC,SAAS,8BAC5BvB,EAAAA,EAAAA,IAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,KAAAA,CAAIwB,SAAS,YAAYP,IACzBjB,EAAAA,EAAAA,IAACyB,EAAa,MACZzB,EAAAA,EAAAA,IAAAA,IAAAA,KAAIkB,IACJlB,EAAAA,EAAAA,IAAC0B,EAAc,SAGnB1B,EAAAA,EAAAA,IAAC2B,EAAW,MACV3B,EAAAA,EAAAA,IAAC4B,EAAAA,EAAW,CACVT,MAAOA,EAAMU,gBAAgBC,gBAC7Bf,IAAI,kBACJgB,UAAU,oCAGd/B,EAAAA,EAAAA,IAAAA,UAAAA,CACEgC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCV,SAAS,iBAEXxB,EAAAA,EAAAA,IAAAA,KAAAA,MAGN,EAMO,MAAMqB,GAAS,6bAoBTI,GAAa,mIAKpBE,GAAW,0H,cCpCjB,MAvBA,SAAa,GAA0B,IAA1B,SAAEQ,EAAQ,KAAEC,GAAW,EAClC,OACEpC,EAAAA,EAAAA,IAACqC,EAAQ,MACPrC,EAAAA,EAAAA,IAAAA,KAAAA,MACEA,EAAAA,EAAAA,IAAAA,KAAAA,CAAI+B,UAAU,IACXI,IACCnC,EAAAA,EAAAA,IAACsC,EAAAA,KAAI,CAACP,UAAU,eAAeQ,GAAIJ,EAASK,OAAOC,KAAMC,IAAI,QAAO,KAC/DP,EAASf,YAAYH,SAI9BjB,EAAAA,EAAAA,IAAAA,KAAAA,KACGoC,IACCpC,EAAAA,EAAAA,IAACsC,EAAAA,KAAI,CAACP,UAAU,eAAeQ,GAAIH,EAAKI,OAAOC,KAAMC,IAAI,QACtDN,EAAKhB,YAAYH,MAAM,QAOtC,EAMO,MAAMoB,GAAQ,wZCTRM,EAAO,IAAyC,IAAtCC,MAAQC,eAAgB7B,IAAQ,EACrD,OACE,QAAC,IAAG,CACFC,MAAOD,EAAKI,YAAYH,MACxB6B,YAAa9B,EAAKI,YAAY0B,aAAe9B,EAAK+B,SAClD,EAGN,MAtByB,IAGlB,IAAD,MAFJH,MAAM,SAAET,EAAQ,KAAEC,EAAI,KAAEY,EAAMH,eAAgB7B,GAAM,SACpDX,GACD,EACC,MAAM4C,GAA6B,QAAjB,EAAAD,EAAKE,oBAAY,aAAjB,EAAmBjC,QAAK,QAE1C,OACE,QAAC,IAAM,CAACZ,SAAUA,EAAUY,MAAOgC,IACjC,QAAC,EAAI,CAACjC,KAAMA,KACZ,QAAC,EAAG,CAACmB,SAAUA,EAAUC,KAAMA,IACxB,C","sources":["webpack://gatsby-starter-blog/./src/components/common/ShareURLButton.tsx","webpack://gatsby-starter-blog/./src/components/post/Post.tsx","webpack://gatsby-starter-blog/./src/components/common/Nav.tsx","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nfunction ShareURLButton() {\n  const handleClickIcon = () => {\n    let nowUrl = window.location.href\n    navigator.clipboard.writeText(nowUrl).then(res => {\n      alert(\"복사되었어요\")\n    })\n  }\n\n  return (\n    <IconStyle onClick={handleClickIcon}>\n      <StaticImage src=\"../../assets/clip.svg\" alt={\"URL Ctrl+C Icon\"} />\n      <span>URL Ctrl+C</span>\n    </IconStyle>\n  )\n}\n\nexport default ShareURLButton\n\nimport styled from \"@emotion/styled\"\n\nexport const IconStyle = styled.div`\n  position: relative;\n\n  span {\n    position: absolute;\n    background-color: black;\n    width: 100px;\n    color: white;\n    top: 40px;\n    text-align: center;\n    padding: 4px;\n    font-size: var(--fontSize-1);\n    border-radius: 5px;\n    left: 50%;\n    transform: translateX(-50%);\n    opacity: 0;\n    transition: 0.5s;\n    visibility: hidden;\n  }\n\n  img {\n    height: 40px;\n    padding: 6px 2px;\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  &:hover img {\n    background-color: var(--color-line);\n    border-radius: var(--spacing-1);\n  }\n\n  @media (max-width: 30rem) {\n    img {\n      height: 32px;\n    }\n  }\n`\n","import React from \"react\"\n\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport ShareURLButton from \"../common/ShareURLButton\"\n\nfunction Post({ post }: any) {\n  const { title, date, image } = post.frontmatter\n\n  return (\n    <PostStyle itemScope itemType=\"http://schema.org/Article\">\n      <header>\n        <h1 itemProp=\"headline\">{title}</h1>\n        <PostInfoStyle>\n          <p>{date}</p>\n          <ShareURLButton />\n        </PostInfoStyle>\n      </header>\n      <CenterStyle>\n        <GatsbyImage\n          image={image.childImageSharp.gatsbyImageData}\n          alt=\"article picture\"\n          className=\"article_picture glassmorphism\"\n        />\n      </CenterStyle>\n      <section\n        dangerouslySetInnerHTML={{ __html: post.html }}\n        itemProp=\"articleBody\"\n      />\n      <hr />\n    </PostStyle>\n  )\n}\n\nexport default Post\n\nimport styled from \"@emotion/styled\"\n\nexport const PostStyle = styled.article`\n  max-width: var(--post-width);\n  margin: var(--spacing-10) auto;\n  padding: 0 var(--layout-width-padding);\n  overflow: hidden;\n  margin: 0 auto;\n  font-size: var(--fontSize-2);\n  .article_picture {\n    width: calc(100vw - 2 * var(--layout-width-padding));\n  }\n\n  section img {\n    width: calc(var(--post-width) - 2 * var(--layout-width-padding));\n    max-width: calc(100vw - 2 * var(--layout-width-padding));\n  }\n  pre {\n    font-size: small;\n  }\n`\n\nexport const PostInfoStyle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  color: var(--color-subText);\n`\nconst CenterStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: var(--spacing-4);\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nfunction Nav({ previous, next }: any) {\n  return (\n    <NavStyle>\n      <ul>\n        <li className=\"\">\n          {previous && (\n            <Link className=\"claymorphism\" to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link className=\"claymorphism\" to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </NavStyle>\n  )\n}\n\nexport default Nav\n\nimport styled from \"@emotion/styled\"\n\nexport const NavStyle = styled.nav`\n  ul {\n    display: flex;\n    justify-content: space-between;\n    text-align: center;\n    list-style: none;\n    @media (max-width: 60rem) {\n      display: block;\n    }\n  }\n\n  li {\n    padding: 0 var(--layout-width-padding);\n    max-width: var(--post-width);\n    margin: var(--spacing-8) auto;\n    line-height: var(--fontSize-7);\n  }\n\n  a {\n    padding: var(--spacing-4);\n    color: var(--color-primary);\n    text-decoration: none;\n    width: max-content;\n  }\n`\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Post from \"../components/post/Post\"\nimport Nav from \"../components/common/Nav\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Post post={post} />\n      <Nav previous={previous} next={next} />\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        date(formatString: \"YYYY.MM.DD\")\n        title\n        description\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 800)\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["___EmotionJSX","IconStyle","onClick","nowUrl","window","location","href","navigator","clipboard","writeText","then","res","alert","StaticImage","src","alt","post","title","date","image","frontmatter","PostStyle","itemScope","itemType","itemProp","PostInfoStyle","ShareURLButton","CenterStyle","GatsbyImage","childImageSharp","gatsbyImageData","className","dangerouslySetInnerHTML","__html","html","previous","next","NavStyle","Link","to","fields","slug","rel","Head","data","markdownRemark","description","excerpt","site","siteTitle","siteMetadata"],"sourceRoot":""}